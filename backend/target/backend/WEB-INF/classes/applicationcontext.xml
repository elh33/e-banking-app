<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           https://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 🔍 Scan des packages -->
    <context:component-scan base-package="org.example.backend" />

    <!-- 🔗 Source de données PostgreSQL -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://pg-7579c18-nadamaliki2105-aef4.i.aivencloud.com:23246/defaultdb?sslmode=require" />
        <property name="username" value="avnadmin" />
        <property name="password" value="AVNS_a94E7dGM5k2AxjTLpYP" />
    </bean>

    <!-- 📦 EntityManagerFactory pour JPA -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="org.example.backend.Model" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <!-- 💼 Gestionnaire de transactions -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- ⚙️ Activer @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 🎯 DAO & Services pour Agent -->
    <bean id="agentRepository" class="org.example.backend.Repository.Agent.AgentRepositoryImpl" />
    <bean id="agentService" class="org.example.backend.Service.Agent.AgentServiceImpl">
        <property name="agentRepository" ref="agentRepository" />
    </bean>

    <!-- 📌 DAO & Services pour Client -->
    <bean id="clientRepository" class="org.example.backend.Repository.Client.ClientRepositoryImpl" />
    <bean id="clientService" class="org.example.backend.Service.Client.ClientServiceImpl">
        <property name="clientRepository" ref="clientRepository" />
    </bean>

    <!-- 💰 DAO & Services pour Compte -->
    <bean id="compteRepository" class="org.example.backend.Repository.Agent.CompteRepositoryImpl" />
    <bean id="compteService" class="org.example.backend.Service.Agent.CompteServiceImpl">
        <property name="compteRepository" ref="compteRepository" />
    </bean>

</beans>
